- name: Copying over  nfs-provisioner rbac
  template:
    src: templates/nfs-provisioner-rbac.yaml.j2
    dest:  "{{ rbac_location }}"
    owner: root
    group: root
    mode: 0666

- name: Copying over nfs-provisioner deployment
  template:
    src: templates/nfs-provisioner-deployment.yaml.j2
    dest: "{{ nfs_provisioner_deploy_loc }}"
    owner: root
    group: root
    mode: 0666

- name: Copying over nfs-provisioner storageclass
  template:
    src: templates/nfs-provisioner-sc.yaml.j2
    dest: /usr/local/src/nfs-provisioner-sc.yaml
    owner: root
    group: root
    mode: 0666

- name: Copying over a sample PVC file for NFS
  template:
    src: templates/registry-pvc.yaml.j2
    dest: /usr/local/src/registry-pvc.yaml
    owner: root
    group: root
    mode: 0666

- name: login as super user with token on OpenShift 4
  shell: "oc login --token={{ openshift_token }}  --server={{ openshift_url }} --insecure-skip-tls-verify={{ insecure_skip_tls_verify }}"
  when:
   - openshift_token is defined
   - openshift_token is not none
   - openshift_token|trim() != ""
   - openshift_version == "ocp4"
  ignore_errors: no


- name: login as super user with token on OpenShift 3
  shell: "oc login {{ openshift_url }} --token={{ openshift_token }} --insecure-skip-tls-verify={{ insecure_skip_tls_verify }}"
  when:
   - openshift_token is defined
   - openshift_token is not none
   - openshift_token|trim() != ""
   - openshift_version == "ocp3"
  ignore_errors: no


- name: Create new project for nfs-provisioner
  command: "oc new-project {{ project_namespace }}"
  register: create_project_result
  when: not delete_deployment

- name: Switch to project for nfs-provisioner
  command:  "oc project {{ project_namespace }}"
  register: switch_project_result

- name: Create rbac run for NFS Provisioner
  command: "oc create -f {{ rbac_location }}"
  register: rbac_result
  when: not delete_deployment

- name: Configure service account privlages for nfs-client-provisioner
  command: "oc adm policy add-scc-to-user hostmount-anyuid system:serviceaccount:{{ project_namespace }}:{{ service_account_name }}"
  register: service_account_result
  when: not delete_deployment

- name: Deploy nfs-provisioner
  command: "oc create -f {{ nfs_provisioner_deploy_loc }} -n {{ project_namespace }}"
  register: deployment_result
  when: not delete_deployment

- name: Deploy nfs-storage storage class
  command: "oc create -f {{ sc_location }}"
  register: storage_class_result
  when: not delete_deployment

- name: Set Storage Class as default
  command: "oc annotate storageclass {{ storage_class_name }} storageclass.kubernetes.io/is-default-class='{{ set_default_storage_class }}'"
  register: set_default_storage_class_result
  when:
  - set_as_default
  - not delete_deployment

- name: Switch back to default project
  command: "oc project default"
  register: default_result
  when: not delete_deployment

- name: Delete rbac  for NFS Provisioner
  command: "oc delete -f {{ rbac_location }}"
  register: rbac_result
  when: delete_deployment

- name: Delete nfs-storage storage class
  command: "oc delete -f {{ sc_location }}"
  register: storage_class_result
  when: delete_deployment

- name: delete nfs-provsioner deployment
  shell: |
    #/bin/bash
    oc delete all --selector app={{ service_account_name }}
    oc delete project {{ project_namespace }}
  when: delete_deployment
