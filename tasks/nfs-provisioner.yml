- name: Copying over nfs-provisioner rbac
  copy:
    src: templates/nfs-provisioner-rbac.yaml
    dest: "{{ rbac_location }}"
    owner: root
    group: root
    mode: 0666

- name: Copying over nfs-provisioner deployment
  template:
    src: templates/nfs-provisioner-deployment.yaml.j2
    dest: "{{ nfs_provisioner_deploy_loc }}"
    owner: root
    group: root
    mode: 0666

- name: Copying over nfs-provisioner storageclass
  copy:
    src: templates/nfs-provisioner-sc.yaml
    dest: /usr/local/src/nfs-provisioner-sc.yaml
    owner: root
    group: root
    mode: 0666

- name: Copying over a sample PVC file for NFS
  template:
    src: templates/registry-pvc.yaml.j2
    dest: /usr/local/src/registry-pvc.yaml
    owner: root
    group: root
    mode: 0666

- name: login as super user with token
  shell: "oc login {{ openshift_url }} --token={{ openshift_token }} --insecure-skip-tls-verify=true"
  when:
   - openshift_token is defined
   - openshift_token is not none
   - openshift_token|trim() != ""
  ignore_errors: no

- name: Create new project for nfs-provisioner
  command: "oc new-project {{ project_namespace }}"
  register: create_project_result
  when: not delete_deployment

- name: Switch to project for nfs-provisioner
  command:  "oc project {{ project_namespace }}"
  register: switch_project_result

- name: Create rbac run for NFS Provisioner
  command: "oc create -f {{ rbac_location }}"
  register: rbac_result
  when: not delete_deployment

- name: Configure service account privlages for nfs-client-provisioner
  command: "oc adm policy add-scc-to-user hostmount-anyuid system:serviceaccount:{{ project_namespace }}:nfs-client-provisioner"
  register: service_account_result
  when: not delete_deployment

- name: Deploy nfs-provisioner
  command: "oc create -f {{ nfs_provisioner_deploy_loc }} -n {{ project_namespace }}"
  register: deployment_result
  when: not delete_deployment

- name: Deploy nfs-storage storage class
  command: "oc create -f {{ sc_location }}"
  register: storage_class_result
  when: not delete_deployment

- name: Set Storage Class as default
  command: "oc annotate storageclass nfs-storage-provisioner storageclass.kubernetes.io/is-default-class='true'"
  register: set_default_storage_class_result
  when:
  - set_as_default
  - not delete_deployment

- name: Switch back to default project
  command: "oc project default"
  register: default_result
  when: not delete_deployment

- name: Delete rbac  for NFS Provisioner
  command: "oc delete -f {{ rbac_location }}"
  register: rbac_result
  when: delete_deployment

- name: Delete nfs-storage storage class
  command: "oc delete -f {{ sc_location }}"
  register: storage_class_result
  when: delete_deployment

- name: delete nfs-provsioner deployment
  shell: |
    #/bin/bash
    oc delete all --selector app=nfs-client-provisioner
    oc delete project {{ project_namespace }}
  when: delete_deployment
